package com.algaworks.algalog.domain.model;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.persistence.Embedded;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.Setter;

@Getter
@Setter
@EqualsAndHashCode(onlyExplicitlyIncluded = true)
@Entity
public class Entrega {
	
	 @EqualsAndHashCode.Include
	 @Id
	 @GeneratedValue(strategy = GenerationType.IDENTITY)
     private Long id;
	 
	 @ManyToOne
	 @JoinColumn(name = "cliente_id") //nome da coluna da tabela de cliente que é a pk
     private Cliente cliente;
     @Embedded // aponta para um classe externa para buscar as informações complementares. poderia fazer uma tabela ou não. 
	 private Destinatario destinatario;
     private BigDecimal taxa;
     
     @JsonProperty(access = Access.READ_ONLY)
     @Enumerated(EnumType.STRING) // indica o tipo de informação que será registrada nesse campo. ordinal registra o indice , string registra o conteudo
     private StatusEntrega status;
     @JsonProperty(access = Access.READ_ONLY)
     private LocalDateTime dataPedido;
     @JsonProperty(access = Access.READ_ONLY) // mesmo preenchendo no corpo da requisição . essa informação sera ignorada
     private LocalDateTime dataFinalizacao;
     
}
